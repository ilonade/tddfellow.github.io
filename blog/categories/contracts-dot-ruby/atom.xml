<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: contracts.ruby | waterlink blog]]></title>
  <link href="http://waterlink.github.io/blog/categories/contracts-dot-ruby/atom.xml" rel="self"/>
  <link href="http://waterlink.github.io/"/>
  <updated>2015-03-10T11:40:27+01:00</updated>
  <id>http://waterlink.github.io/</id>
  <author>
    <name><![CDATA[Alexey Fedorov (waterlink)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How Can contracts.ruby Be Used in the Community With Duck Typing Culture?]]></title>
    <link href="http://waterlink.github.io/blog/2015/03/10/how-can-contracts-dot-ruby-be-used-in-the-community-with-duck-typing-culture/"/>
    <updated>2015-03-10T11:11:23+01:00</updated>
    <id>http://waterlink.github.io/blog/2015/03/10/how-can-contracts-dot-ruby-be-used-in-the-community-with-duck-typing-culture</id>
    <content type="html"><![CDATA[<p>So, given simple example:</p>

<pre><code class="ruby">Contract Num, Num =&gt; Num
def add(a, b)
  a + b
end
</code></pre>

<p>One can ask: &ldquo;But it is ruby, what about duck typing, I want just pass two things that have certain methods defined on them&rdquo;</p>

<p>And my answer, you can easily do that:</p>

<pre><code class="ruby">Contract RespondTo[:save, :has_valid?], RespondTo[:to_s] =&gt; Any
def assign_user_a_default_email(user, default_email)
  user.email = default_email unless user.has_valid?(:email)
  user.save
end
</code></pre>

<p>This is a built-in <code>RespondTo</code> contract. You can get a list of all of them here: <a href="http://egonschiele.github.io/contracts.ruby/#built-in-contracts">http://egonschiele.github.io/contracts.ruby/#built-in-contracts</a></p>

<p>If you have any questions, you can always ping me at twitter <a href="https://twitter.com/waterlink000">@waterlink000</a></p>
]]></content>
  </entry>
  
</feed>
